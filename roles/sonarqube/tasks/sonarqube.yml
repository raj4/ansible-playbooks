---
    - name: Installing dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items: "{{ dependencies }}"

    - name: Checking sonarqube file, exists or not
      stat:
        path: "{{ sonarqube_tar }}"
      register: bool_file_exist

    - name: Downloading sonarqube version
      command: 'wget -O {{ destionation_dir }}{{ sonar_file_name }}.zip --no-check-certificate {{ sonar_download_url }}{{ sonar_file_name }}.zip'
      when: bool_file_exist.stat.exists == False

    - name: Checking sonarqube file, exists or not
      stat:
        path: "{{ sonarqube_tar }}"
      register: bool_file_exist

    - name: Untar sonarqube
      unarchive:
        src: "{{ sonarqube_tar }}"
        dest: "{{ destionation_dir }}"
        remote_src: yes
      when: bool_file_exist.stat.exists == True

    - name: Checking sonarqube untared dir, exists or not
      stat:
        path: "{{ destionation_dir }}{{ sonar_file_name }}"
      register: bool_dir_exist

    - name: Move folder sonar
      #Cannot use copy module as it does not support recursive copy when remote_src=yes.
      command: 'mv {{ destionation_dir }}{{ sonar_file_name }}/ {{ destionation_dir }}{{ sonarqube_filename }}/'
      when: bool_dir_exist.stat.exists == True

    - name: Removing sonarqube old dir
      file:
        path: "{{ destionation_dir }}{{ sonar_file_name }}"
        state: absent

    - name: Creating group sonar
      command: 'groupadd {{ sonarqube_group }}'

    - name: Creating user sonar
      command: 'useradd -c "Sonar System User" -d {{ destionation_dir }}{{ sonarqube_filename }}  -g {{ sonarqube_group }} -s /bin/bash {{ sonarqube_user }}'  

    - name: Changing ownership of sonar home folder
      file:
        path: "{{ destionation_dir }}{{ sonarqube_filename }}"
        owner: "{{ sonarqube_user }}"
        group: "{{ sonarqube_group }}"
        recurse: yes

    - name: Editing sonar.sh properties
      replace:
        path: "{{ sonar_properties }}"
        regexp: '#RUN_AS_USER='
        replace: 'RUN_AS_USER="{{ sonarqube_user }}"'

    - name: Setting sonarqube properties
      replace:
        path: "{{ sonarqube_conf }}"
        regexp: "{{ item.regex }}"
        replace: "{{ item.replace }}"
      with_items: "{{ db_properties }}"

    - name: Copying sonar file to remote location
      copy:
        src: "{{ sonar_file }}"
        dest: '/etc/init.d/'

    - name: Creating softlink for sonarqube
      file:
        src: "{{ sonar_properties }}"
        dest: "{{ link_path }}"
        state: link

    - name: Changing sonar file mode
      command: 'chmod 755 {{ etc_sonar_file }}'

    - name: Adding sonar to the boot
      command: 'chkconfig --add sonar'

    - name: Starting Sonar service
      command: '/etc/init.d/sonar start'
      become: yes
      become_user: "{{ sonarqube_user }}"

    - name: Removing sonar setup file
      file:
        path: "{{ sonarqube_tar }}"
        state: absent
